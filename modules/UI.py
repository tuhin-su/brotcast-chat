import tkinter as tk
from tkinter import *
import ttkbootstrap as ttk
from ttkbootstrap.constants import *
from modules.config import config
from base64 import b64decode
from time import sleep

class UI:
    def __init__(self, conf:config) -> None:
        self.conf=conf
        self.appTitle = "BTChat"
        self.height = 600
        self.width = 400
        self.cn = None
        self.active=False
        
        self.cLc = 0
        self.label_list = []
        self.last_place = 400

        self.window = ttk.Window()
        self.window.title(self.appTitle)
        

        self.Tchaticon = PhotoImage(data=b64decode(
            ''''''))
        self.me_icon = PhotoImage(data=b64decode(
            '''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'''))
        self.next_icon = PhotoImage(data=b64decode(
            '''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'''))

        
        
    def center_horizontal(self, root, chield, x:float=0.5, y:float=0.5):
        chield.place(in_=root, relx=y, rely=x, anchor='center', height=40)
    
    def set(self, contriler):
        self.cn = contriler

    def go_up(self, event): # scroll up
        print("go down")
    


    def go_down(self, event): # scroll down
        print("go down")
       
    def add_msg(self, data:dict, append:bool=True, pos=0):
        current_msg = str(data["data"])
        sender_id = data["id"]
        print("add msg on list view with logic")

        

    def send_msg(self, event):
        current_msg = ""

        if current_msg.isspace() == False and len(current_msg) > 0:
            self.cn.send(current_msg)

    def login(self, event):
        id = ""
        if id.isalpha():
            self.cn.id=id
            self.cn.start_lisiner()

    def create_window(self):
        self.window.minsize(self.width, self.height)
        self.window.maxsize(self.width, self.height)
        self.window.iconphoto(True, self.Tchaticon)
        
    def run(self):
        self.active=True
        self.window.mainloop()